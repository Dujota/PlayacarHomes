import { PreviewSuspense } from '@sanity/preview-kit';
import ListingsIndexPage from 'components/listings/starter/ListingsIndexPage';
import { getAllListings, getSettings } from 'lib/sanity.client';
import { Listing } from 'lib/sanity.queries/listings';
import { Settings } from 'lib/sanity.queries/settings';
import { GetStaticProps } from 'next';
import { lazy } from 'react';

const PreviewListingsIndexPage = lazy(() => import('components/listings/starter/PreviewListingsIndexPage'));

interface PageProps {
  listings: Listing[];
  settings: Settings;
  preview: boolean;
  token: string | null;
}

interface Query {
  [key: string]: string;
}

interface PreviewData {
  token?: string;
}

export default function Page(props: PageProps) {
  const { listings, settings, preview, token } = props;

  if (preview) {
    return (
      <PreviewSuspense fallback={<ListingsIndexPage loading preview listings={listings} settings={settings} />}>
        <PreviewListingsIndexPage token={token} />
      </PreviewSuspense>
    );
  }

  return <ListingsIndexPage listings={listings} settings={settings} />;
}

export const getStaticProps: GetStaticProps<PageProps, Query, PreviewData> = async (ctx) => {
  const { preview = false, previewData = {} } = ctx;

  const [settings, listings = []] = await Promise.all([getSettings(), getAllListings()]);

  return {
    props: {
      listings,
      settings,
      preview,
      token: previewData.token ?? null,
    },
  };
};
